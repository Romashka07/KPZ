// <auto-generated />
using System;
using Lab3KPZ_CF_.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab3KPZ_CF_.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.FileImport", b =>
                {
                    b.Property<int>("FileImportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FileImportID"));

                    b.Property<int?>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("ImportDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("FileImportID");

                    b.HasIndex("AdminID");

                    b.ToTable("FileImports");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("GroupID"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("StreamID")
                        .HasColumnType("int");

                    b.HasKey("GroupID");

                    b.HasIndex("StreamID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Stream", b =>
                {
                    b.Property<int>("StreamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StreamID"));

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("StreamName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("StreamID");

                    b.HasIndex("CourseID");

                    b.ToTable("Streams");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<int?>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("StudentID");

                    b.HasIndex("GroupID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.FileImport", b =>
                {
                    b.HasOne("Lab3KPZ_CF_.Data.User", "Admin")
                        .WithMany("FileImports")
                        .HasForeignKey("AdminID");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Group", b =>
                {
                    b.HasOne("Lab3KPZ_CF_.Data.Stream", "Stream")
                        .WithMany("Groups")
                        .HasForeignKey("StreamID");

                    b.Navigation("Stream");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Stream", b =>
                {
                    b.HasOne("Lab3KPZ_CF_.Data.Course", "Course")
                        .WithMany("Streams")
                        .HasForeignKey("CourseID");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Student", b =>
                {
                    b.HasOne("Lab3KPZ_CF_.Data.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupID");

                    b.HasOne("Lab3KPZ_CF_.Data.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("Lab3KPZ_CF_.Data.Student", "UserID");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.User", b =>
                {
                    b.HasOne("Lab3KPZ_CF_.Data.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Course", b =>
                {
                    b.Navigation("Streams");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.Stream", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Lab3KPZ_CF_.Data.User", b =>
                {
                    b.Navigation("FileImports");

                    b.Navigation("Student")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
